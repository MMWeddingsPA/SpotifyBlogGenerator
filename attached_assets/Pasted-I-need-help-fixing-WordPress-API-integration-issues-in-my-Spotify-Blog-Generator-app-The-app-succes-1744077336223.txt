I need help fixing WordPress API integration issues in my Spotify Blog Generator app. The app successfully generates blog content using OpenAI but fails when trying to post to WordPress (403 Forbidden errors). Here are the specific issues that need fixing:  

1. Fix file corruption in wordpress_api.py:  
   - Remove duplicated code at the end of the file  
   - Remove stray `:import requests` line causing syntax errors  
   - Same issue exists in openai_api.py  

2. Update the WordPress post creation method:  
   - Current implementation in WordPressAPI.create_post() needs to match exactly how n8n formats its request  
   - WordPress expects the title and content to be in format: {'title': {'raw': title_text}, 'content': {'raw': content_text}}  
   - Status should be set to "draft" for testing  

3. Add a simple test function to isolate the issue:  
```python  
def create_test_post(self):  
    """Simple function to test WordPress POST capability with minimal content"""  
    test_title = "Test Post from Replit"  
    test_content = "This is a simple test post created at " + datetime.now().isoformat()  
    
    logger.info("Creating simple test post...")  
    
    # Use existing create_post method  
    result = self.create_post(test_title, test_content, status='draft')  
    
    # Log the full result  
    logger.info(f"Test post result: {json.dumps(result, indent=2)}")  
    
    return result  
Improve error logging to capture the exact response from WordPress:

Log complete response headers and body when errors occur
Log the exact request being sent (headers and body)
Update the authentication approach:

Ensure Basic Auth is formatted exactly as: "Authorization: Basic <base64(username:password)>"
Check for special characters in username or password that might need URL encoding
Try both auth methods (header-based and direct tuple) but log exactly which one works
Please fix these issues and provide a simple test case that creates a minimal WordPress draft post to verify the fix works.